package vozila;

import teret.*;
import generickiNiz.*;

/**
 * 
 * @author emma
 * 
 * Zadatak 3 - klasa Vagon, nasleđuje vozilo
 * Vagon je vozilo koje sadrži niz tereta. Stvara se prazan zadatog kapaciteta posle 
 * čega se terete dodaju pojedinačno. Vučna sila vagona je 0. 
 * Teksutalni opis je oblika V(ukTežina|teret, ... teret). * 
 *
 */
public class Vagon extends Vozilo {
	
	private int kapacitetVagona;
	Skup<Teret> tereti; 
	private static int brojac = 0; //broji broj unetih tereta, koristi se za brisanje tereta kod koga je došlo do prekoračenja
	
	public Vagon(int t, int kapacitet) {
		super(t);
		super.vucnaSila = 0;
		this.kapacitetVagona = kapacitet;
		tereti = new Skup<Teret>();
	}

	public void addTeret(Teret t) {
		try {
			tereti.add(t);			
			if (this.ukupnaTezina() > this.kapacitetVagona)
				throw new Exception();
			brojac++;
		}
		catch(Exception e) {
			System.out.println("Greška! Prekoračenje kapaciteta! Teret " + 
								t.toString() + " je odbačen!");
			//tereti.procitajObjekat(tereti.brojObjekata()-1);
			//System.out.println(t.toString());
			tereti.remove(brojac);
		}
	}
	
	@Override
	public int ukupnaTezina() {
		int tezina = this.tezinaVozila;
		for(Teret t : this.tereti) {
			tezina += t.getTezinaTereta();
		}
		return tezina;
	}

	@Override
	public String toString() {
		// opis vagona
		int i = 0;
		String opis = "V(" + this.ukupnaTezina() + " | ";
		for(Teret t : this.tereti) {
			opis += t.getTezinaTereta();
			i++;
			if(i < tereti.size())
				opis += ", ";
		}
		opis += ")";
		
		return opis; 
	}

}
